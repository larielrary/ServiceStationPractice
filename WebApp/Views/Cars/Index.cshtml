@model IEnumerable<BusinessLayer.Models.Car>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using Microsoft.AspNetCore.Identity

<table class="table">
    <thead>
        <tr>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.CarNumber)"></label>
            </th>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.CarModel)"></label>
            </th>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.EngineCapacity)"></label>
            </th>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.BodyNubmer)"></label>
            </th>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.YearOfProduction)"></label>
            </th>
            <th>
                <label asp-for="@Html.DisplayNameFor(model => model.OwnerId)"></label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td asp-display-for="@item.CarNumber"></td>
            <td asp-display-for="@item.CarModel"></td>
            <td asp-display-for="@item.EngineCapacity"></td>
            <td asp-display-for="@item.BodyNubmer"></td>
            <td asp-display-for="@item.YearOfProduction"></td>
            <td asp-display-for="@item.OwnerId"></td>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("admin"))
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="Create">Create</a>
</p>
